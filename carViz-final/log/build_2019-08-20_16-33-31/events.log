[0.000000] (-) TimerEvent: {}
[0.001285] (carviz) JobQueued: {'identifier': 'carviz', 'dependencies': OrderedDict()}
[0.002180] (carviz) JobStarted: {'identifier': 'carviz'}
[0.102870] (-) TimerEvent: {}
[0.133874] (carviz) JobProgress: {'identifier': 'carviz', 'progress': 'cmake'}
[0.145601] (carviz) JobProgress: {'identifier': 'carviz', 'progress': 'build'}
[0.158727] (carviz) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/pankhuri/Week13/carViz/build/carviz', '--', '-j4', '-l4'], 'cwd': '/home/pankhuri/Week13/carViz/build/carviz', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('WORKON_HOME', '/home/pankhuri/.virtualenvs'), ('USER', 'pankhuri'), ('LANGUAGE', 'en_IN:en'), ('TEXTDOMAIN', 'im-config'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '2887'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '2'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('QT4_IM_MODULE', 'xim'), ('HOME', '/home/pankhuri'), ('VIRTUALENVWRAPPER_PYTHON', '/usr/bin/python3'), ('DESKTOP_SESSION', 'ubuntu'), ('TERM_PROGRAM_VERSION', '1.34.0'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/code.desktop'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '23997'), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('IM_CONFIG_PHASE', '2'), ('LOGNAME', 'pankhuri'), ('GTK_IM_MODULE', 'ibus'), ('_', '/usr/bin/colcon'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('USERNAME', 'pankhuri'), ('XDG_SESSION_ID', '2'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '2'), ('PATH', '/home/pankhuri/.local/bin:/home/pankhuri/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/pankhuri-LENOVO-IDEAPAD-500-15ISK:@/tmp/.ICE-unix/2761,unix/pankhuri-LENOVO-IDEAPAD-500-15ISK:/tmp/.ICE-unix/2761'), ('XDG_MENU_PREFIX', 'gnome-'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_GB.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('TERM_PROGRAM', 'vscode'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XMODIFIERS', '@im=ibus'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('SHELL', '/bin/bash'), ('NO_AT_BRIDGE', '1'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('TEXTDOMAINDIR', '/usr/share/locale/'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('XDG_VTNR', '2'), ('QT_IM_MODULE', 'ibus'), ('LC_ALL', 'en_US.UTF-8'), ('PWD', '/home/pankhuri/Week13/carViz/build/carviz'), ('CLUTTER_IM_MODULE', 'xim'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg')]), 'shell': False}
[0.205348] (-) TimerEvent: {}
[0.306996] (-) TimerEvent: {}
[0.410258] (-) TimerEvent: {}
[0.510975] (-) TimerEvent: {}
[0.612479] (-) TimerEvent: {}
[0.714443] (-) TimerEvent: {}
[0.816007] (-) TimerEvent: {}
[0.866402] (carviz) StdoutLine: {'line': b'[  4%] \x1b[34m\x1b[1mAutomatic MOC for target carViz\x1b[0m\n'}
[0.916155] (-) TimerEvent: {}
[1.016886] (-) TimerEvent: {}
[1.046177] (carviz) StdoutLine: {'line': b'[  4%] Built target carViz_autogen\n'}
[1.116965] (-) TimerEvent: {}
[1.202072] (carviz) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target carViz\x1b[0m\n'}
[1.219180] (-) TimerEvent: {}
[1.320826] (-) TimerEvent: {}
[1.423969] (-) TimerEvent: {}
[1.524860] (-) TimerEvent: {}
[1.625386] (-) TimerEvent: {}
[1.725983] (-) TimerEvent: {}
[1.826609] (-) TimerEvent: {}
[1.928130] (-) TimerEvent: {}
[2.029703] (-) TimerEvent: {}
[2.131539] (-) TimerEvent: {}
[2.232618] (-) TimerEvent: {}
[2.333373] (-) TimerEvent: {}
[2.434242] (-) TimerEvent: {}
[2.481406] (carviz) StdoutLine: {'line': b'[  8%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/comm/ros2src/listenerCameraros2.cpp.o\x1b[0m\n'}
[2.534369] (-) TimerEvent: {}
[2.635744] (-) TimerEvent: {}
[2.742118] (-) TimerEvent: {}
[2.846224] (-) TimerEvent: {}
[2.948062] (-) TimerEvent: {}
[3.048820] (-) TimerEvent: {}
[3.149813] (-) TimerEvent: {}
[3.252081] (-) TimerEvent: {}
[3.356473] (-) TimerEvent: {}
[3.458631] (-) TimerEvent: {}
[3.559619] (-) TimerEvent: {}
[3.660239] (-) TimerEvent: {}
[3.762305] (-) TimerEvent: {}
[3.863884] (-) TimerEvent: {}
[3.964505] (-) TimerEvent: {}
[4.065605] (-) TimerEvent: {}
[4.166248] (-) TimerEvent: {}
[4.268518] (-) TimerEvent: {}
[4.370589] (-) TimerEvent: {}
[4.472233] (-) TimerEvent: {}
[4.574271] (-) TimerEvent: {}
[4.675445] (-) TimerEvent: {}
[4.776584] (-) TimerEvent: {}
[4.877208] (-) TimerEvent: {}
[4.977717] (-) TimerEvent: {}
[5.078214] (-) TimerEvent: {}
[5.178713] (-) TimerEvent: {}
[5.279331] (-) TimerEvent: {}
[5.379985] (-) TimerEvent: {}
[5.480539] (-) TimerEvent: {}
[5.581069] (-) TimerEvent: {}
[5.681675] (-) TimerEvent: {}
[5.784305] (-) TimerEvent: {}
[5.887948] (-) TimerEvent: {}
[5.989180] (-) TimerEvent: {}
[6.091176] (-) TimerEvent: {}
[6.191965] (-) TimerEvent: {}
[6.295026] (-) TimerEvent: {}
[6.396651] (-) TimerEvent: {}
[6.497502] (-) TimerEvent: {}
[6.598146] (-) TimerEvent: {}
[6.699630] (-) TimerEvent: {}
[6.800976] (-) TimerEvent: {}
[6.904399] (-) TimerEvent: {}
[7.008720] (-) TimerEvent: {}
[7.110298] (-) TimerEvent: {}
[7.211335] (-) TimerEvent: {}
[7.312185] (-) TimerEvent: {}
[7.412806] (-) TimerEvent: {}
[7.513954] (-) TimerEvent: {}
[7.617129] (-) TimerEvent: {}
[7.718516] (-) TimerEvent: {}
[7.822137] (-) TimerEvent: {}
[7.924723] (-) TimerEvent: {}
[8.025444] (-) TimerEvent: {}
[8.127630] (-) TimerEvent: {}
[8.234882] (-) TimerEvent: {}
[8.337819] (-) TimerEvent: {}
[8.438814] (-) TimerEvent: {}
[8.540385] (-) TimerEvent: {}
[8.642899] (-) TimerEvent: {}
[8.749711] (-) TimerEvent: {}
[8.851188] (-) TimerEvent: {}
[8.969368] (-) TimerEvent: {}
[9.070187] (-) TimerEvent: {}
[9.174962] (-) TimerEvent: {}
[9.275705] (-) TimerEvent: {}
[9.376549] (-) TimerEvent: {}
[9.477453] (-) TimerEvent: {}
[9.578124] (-) TimerEvent: {}
[9.680274] (-) TimerEvent: {}
[9.783552] (-) TimerEvent: {}
[9.885182] (-) TimerEvent: {}
[9.987094] (-) TimerEvent: {}
[10.088666] (-) TimerEvent: {}
[10.189947] (-) TimerEvent: {}
[10.290691] (-) TimerEvent: {}
[10.391461] (-) TimerEvent: {}
[10.492272] (-) TimerEvent: {}
[10.592981] (-) TimerEvent: {}
[10.693718] (-) TimerEvent: {}
[10.796134] (-) TimerEvent: {}
[10.897153] (-) TimerEvent: {}
[10.998431] (-) TimerEvent: {}
[11.100622] (-) TimerEvent: {}
[11.203502] (-) TimerEvent: {}
[11.305298] (-) TimerEvent: {}
[11.407970] (-) TimerEvent: {}
[11.508753] (-) TimerEvent: {}
[11.609490] (-) TimerEvent: {}
[11.710884] (-) TimerEvent: {}
[11.813387] (-) TimerEvent: {}
[11.914733] (-) TimerEvent: {}
[12.018842] (-) TimerEvent: {}
[12.119693] (-) TimerEvent: {}
[12.220680] (-) TimerEvent: {}
[12.322036] (-) TimerEvent: {}
[12.422641] (-) TimerEvent: {}
[12.523338] (-) TimerEvent: {}
[12.624167] (-) TimerEvent: {}
[12.725145] (-) TimerEvent: {}
[12.826175] (-) TimerEvent: {}
[12.929389] (-) TimerEvent: {}
[13.033834] (-) TimerEvent: {}
[13.135730] (-) TimerEvent: {}
[13.236409] (-) TimerEvent: {}
[13.337204] (-) TimerEvent: {}
[13.437933] (-) TimerEvent: {}
[13.539377] (-) TimerEvent: {}
[13.642049] (-) TimerEvent: {}
[13.743489] (-) TimerEvent: {}
[13.846484] (-) TimerEvent: {}
[13.948624] (-) TimerEvent: {}
[14.050086] (-) TimerEvent: {}
[14.151156] (-) TimerEvent: {}
[14.252181] (-) TimerEvent: {}
[14.354219] (-) TimerEvent: {}
[14.455038] (-) TimerEvent: {}
[14.556120] (-) TimerEvent: {}
[14.657923] (-) TimerEvent: {}
[14.762004] (-) TimerEvent: {}
[14.863422] (-) TimerEvent: {}
[14.965605] (-) TimerEvent: {}
[15.067448] (-) TimerEvent: {}
[15.168488] (-) TimerEvent: {}
[15.271214] (-) TimerEvent: {}
[15.371880] (-) TimerEvent: {}
[15.472745] (-) TimerEvent: {}
[15.575872] (-) TimerEvent: {}
[15.677639] (-) TimerEvent: {}
[15.779052] (-) TimerEvent: {}
[15.881214] (-) TimerEvent: {}
[15.983021] (-) TimerEvent: {}
[16.084396] (-) TimerEvent: {}
[16.185470] (-) TimerEvent: {}
[16.286642] (-) TimerEvent: {}
[16.387362] (-) TimerEvent: {}
[16.488030] (-) TimerEvent: {}
[16.588670] (-) TimerEvent: {}
[16.689536] (-) TimerEvent: {}
[16.790921] (-) TimerEvent: {}
[16.891721] (-) TimerEvent: {}
[16.992744] (-) TimerEvent: {}
[17.093934] (-) TimerEvent: {}
[17.195028] (-) TimerEvent: {}
[17.297294] (-) TimerEvent: {}
[17.398290] (-) TimerEvent: {}
[17.499639] (-) TimerEvent: {}
[17.600759] (-) TimerEvent: {}
[17.702387] (-) TimerEvent: {}
[17.803059] (-) TimerEvent: {}
[17.850814] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KComm::ListenerCamera::ListenerCamera(int, char**, std::__cxx11::string, std::__cxx11::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.857826] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:5:37:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kargc\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[17.870276] (carviz) StderrLine: {'line': b'  ListenerCamera::ListenerCamera(int \x1b[01;35m\x1b[Kargc\x1b[m\x1b[K, char** argv, std::string nodeName, std::string topic): Node(nodeName)\n'}
[17.872686] (carviz) StderrLine: {'line': b'                                     \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[17.873650] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:5:50:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kargv\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[17.874252] (carviz) StderrLine: {'line': b'  ListenerCamera::ListenerCamera(int argc, char** \x1b[01;35m\x1b[Kargv\x1b[m\x1b[K, std::string nodeName, std::string topic): Node(nodeName)\n'}
[17.874811] (carviz) StderrLine: {'line': b'                                                  \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[17.903171] (-) TimerEvent: {}
[18.007007] (-) TimerEvent: {}
[18.109264] (-) TimerEvent: {}
[18.212718] (-) TimerEvent: {}
[18.315007] (-) TimerEvent: {}
[18.418753] (-) TimerEvent: {}
[18.522618] (-) TimerEvent: {}
[18.626317] (-) TimerEvent: {}
[18.728809] (-) TimerEvent: {}
[18.830517] (-) TimerEvent: {}
[18.932257] (-) TimerEvent: {}
[19.034188] (-) TimerEvent: {}
[19.136642] (-) TimerEvent: {}
[19.238735] (-) TimerEvent: {}
[19.340327] (-) TimerEvent: {}
[19.442194] (-) TimerEvent: {}
[19.545242] (-) TimerEvent: {}
[19.647643] (-) TimerEvent: {}
[19.748975] (-) TimerEvent: {}
[19.849783] (-) TimerEvent: {}
[19.951206] (-) TimerEvent: {}
[20.053436] (-) TimerEvent: {}
[20.160643] (-) TimerEvent: {}
[20.261608] (-) TimerEvent: {}
[20.362345] (-) TimerEvent: {}
[20.462943] (-) TimerEvent: {}
[20.563653] (-) TimerEvent: {}
[20.664440] (-) TimerEvent: {}
[20.765018] (-) TimerEvent: {}
[20.865833] (-) TimerEvent: {}
[20.966497] (-) TimerEvent: {}
[21.067227] (-) TimerEvent: {}
[21.168597] (-) TimerEvent: {}
[21.272647] (-) TimerEvent: {}
[21.373585] (-) TimerEvent: {}
[21.474306] (-) TimerEvent: {}
[21.479431] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_base.hpp:28:0\x1b[m\x1b[K,\n'}
[21.480060] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager_impl.hpp:38\x1b[m\x1b[K,\n'}
[21.480527] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager.hpp:32\x1b[m\x1b[K,\n'}
[21.480931] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/publisher.hpp:35\x1b[m\x1b[K,\n'}
[21.481347] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[21.481711] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[21.482073] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[21.482420] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[21.482796] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executor.hpp:32\x1b[m\x1b[K,\n'}
[21.483182] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors/multi_threaded_executor.hpp:24\x1b[m\x1b[K,\n'}
[21.483562] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[21.489060] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[21.489501] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/../ros2head/listenerCameraros2.hpp:3\x1b[m\x1b[K,\n'}
[21.489961] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:1\x1b[m\x1b[K:\n'}
[21.493341] (carviz) StderrLine: {'line': b'/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[21.493811] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:88:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; Alloc = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.494327] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.494772] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.495568] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:9:69:\x1b[m\x1b[K   required from here\n'}
[21.496058] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> >::SharedPtrCallback {aka std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>}\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99)\n'}
[21.496870] (carviz) StderrLine: {'line': b'     \x1b[01;31m\x1b[Kshared_ptr_callback_ = callback\x1b[m\x1b[K;\n'}
[21.497571] (carviz) StderrLine: {'line': b'     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[21.498319] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/7/future:48:0\x1b[m\x1b[K,\n'}
[21.498925] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[21.499325] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[21.499729] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/../ros2head/listenerCameraros2.hpp:3\x1b[m\x1b[K,\n'}
[21.500113] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:1\x1b[m\x1b[K:\n'}
[21.500487] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:480:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >}]\n'}
[21.500893] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const function& __x)\n'}
[21.501269] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[21.501639] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:480:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.502039] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:498:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >}]\n'}
[21.502513] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(function&& __x) noexcept\n'}
[21.502862] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[21.503215] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:498:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.503554] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:512:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >}; std::nullptr_t = std::nullptr_t]\n'}
[21.504941] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(nullptr_t) noexcept\n'}
[21.505368] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[21.505800] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:512:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.506304] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:541:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Functor> std::function<_Res(_ArgTypes ...)>::_Requires<std::function<_Res(_ArgTypes ...)>::_Callable<typename std::decay<_U1>::type>, std::function<_Res(_ArgTypes ...)>&> std::function<_Res(_ArgTypes ...)>::operator=(_Functor&&) [with _Functor = _Functor; _Res = void; _ArgTypes = {std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >}]\n'}
[21.506714] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Functor&& __f)\n'}
[21.507060] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[21.507428] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:541:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.507797] (carviz) StderrLine: {'line': b'/usr/include/c++/7/bits/std_function.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor> std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>::_Requires<std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>::_Callable<typename std::decay<_Tp>::type, typename std::result_of<typename std::decay<_Tp>::type&(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>::type>, std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>&> std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>::operator=<_Functor>(_Functor&&) [with _Functor = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[21.508233] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.508627] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:88:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; Alloc = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.509077] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.509503] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.510695] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:9:69:\x1b[m\x1b[K   required from here\n'}
[21.511411] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:541:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kclass std::result_of<std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>&(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.511877] (carviz) StderrLine: {'line': b'/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[21.512314] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:88:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; Alloc = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.512746] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.513107] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.513473] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:9:69:\x1b[m\x1b[K   required from here\n'}
[21.513877] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:550:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Functor> std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::reference_wrapper<_Functor>) [with _Functor = _Functor; _Res = void; _ArgTypes = {std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >}]\n'}
[21.514446] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(reference_wrapper<_Functor> __f) noexcept\n'}
[21.514935] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[21.515402] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:550:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.515848] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_base.hpp:28:0\x1b[m\x1b[K,\n'}
[21.516269] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager_impl.hpp:38\x1b[m\x1b[K,\n'}
[21.516669] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager.hpp:32\x1b[m\x1b[K,\n'}
[21.517047] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/publisher.hpp:35\x1b[m\x1b[K,\n'}
[21.517477] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[21.528732] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[21.532416] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[21.533060] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[21.533594] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executor.hpp:32\x1b[m\x1b[K,\n'}
[21.534157] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors/multi_threaded_executor.hpp:24\x1b[m\x1b[K,\n'}
[21.539948] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[21.540571] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[21.541140] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/../ros2head/listenerCameraros2.hpp:3\x1b[m\x1b[K,\n'}
[21.541666] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:1\x1b[m\x1b[K:\n'}
[21.542169] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::reference_wrapper<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.542646] (carviz) StderrLine: {'line': b'     \x1b[01;36m\x1b[Kshared_ptr_callback_ = callback\x1b[m\x1b[K;\n'}
[21.543104] (carviz) StderrLine: {'line': b'     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[21.574677] (-) TimerEvent: {}
[21.676448] (-) TimerEvent: {}
[21.782964] (-) TimerEvent: {}
[21.883773] (-) TimerEvent: {}
[21.985558] (-) TimerEvent: {}
[22.087027] (-) TimerEvent: {}
[22.189164] (-) TimerEvent: {}
[22.290536] (-) TimerEvent: {}
[22.391622] (-) TimerEvent: {}
[22.493568] (-) TimerEvent: {}
[22.595014] (-) TimerEvent: {}
[22.696120] (-) TimerEvent: {}
[22.797324] (-) TimerEvent: {}
[22.898614] (-) TimerEvent: {}
[22.999611] (-) TimerEvent: {}
[23.101671] (-) TimerEvent: {}
[23.204535] (-) TimerEvent: {}
[23.305910] (-) TimerEvent: {}
[23.407270] (-) TimerEvent: {}
[23.510109] (-) TimerEvent: {}
[23.611522] (-) TimerEvent: {}
[23.712683] (-) TimerEvent: {}
[23.813394] (-) TimerEvent: {}
[23.914139] (-) TimerEvent: {}
[24.014879] (-) TimerEvent: {}
[24.116441] (-) TimerEvent: {}
[24.218897] (-) TimerEvent: {}
[24.263827] (carviz) StdoutLine: {'line': b"CMakeFiles/carViz.dir/build.make:446: recipe for target 'CMakeFiles/carViz.dir/comm/ros2src/listenerCameraros2.cpp.o' failed\n"}
[24.266653] (carviz) StderrLine: {'line': b'make[2]: *** [CMakeFiles/carViz.dir/comm/ros2src/listenerCameraros2.cpp.o] Error 1\n'}
[24.275239] (carviz) StdoutLine: {'line': b"CMakeFiles/Makefile2:67: recipe for target 'CMakeFiles/carViz.dir/all' failed\n"}
[24.275909] (carviz) StdoutLine: {'line': b"Makefile:140: recipe for target 'all' failed\n"}
[24.276628] (carviz) StderrLine: {'line': b'make[1]: *** [CMakeFiles/carViz.dir/all] Error 2\n'}
[24.277222] (carviz) StderrLine: {'line': b'make: *** [all] Error 2\n'}
[24.278186] (carviz) CommandEnded: {'returncode': 2}
[24.280901] (carviz) JobEnded: {'identifier': 'carviz', 'rc': 2}
[24.859277] (-) TimerEvent: {}
[24.859610] (-) EventReactorShutdown: {}
