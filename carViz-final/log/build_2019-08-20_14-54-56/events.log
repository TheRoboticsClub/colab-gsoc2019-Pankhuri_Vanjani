[0.000000] (-) TimerEvent: {}
[0.001258] (carviz) JobQueued: {'identifier': 'carviz', 'dependencies': OrderedDict()}
[0.003042] (carviz) JobStarted: {'identifier': 'carviz'}
[0.020092] (carviz) JobProgress: {'identifier': 'carviz', 'progress': 'cmake'}
[0.024502] (carviz) JobProgress: {'identifier': 'carviz', 'progress': 'build'}
[0.025015] (carviz) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/pankhuri/Week13/carViz/build/carviz', '--', '-j4', '-l4'], 'cwd': '/home/pankhuri/Week13/carViz/build/carviz', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('WORKON_HOME', '/home/pankhuri/.virtualenvs'), ('USER', 'pankhuri'), ('LANGUAGE', 'en_IN:en'), ('TEXTDOMAIN', 'im-config'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '2887'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '2'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('QT4_IM_MODULE', 'xim'), ('HOME', '/home/pankhuri'), ('VIRTUALENVWRAPPER_PYTHON', '/usr/bin/python3'), ('DESKTOP_SESSION', 'ubuntu'), ('TERM_PROGRAM_VERSION', '1.34.0'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/code.desktop'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '23997'), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('IM_CONFIG_PHASE', '2'), ('LOGNAME', 'pankhuri'), ('GTK_IM_MODULE', 'ibus'), ('_', '/usr/bin/colcon'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('USERNAME', 'pankhuri'), ('XDG_SESSION_ID', '2'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '2'), ('PATH', '/home/pankhuri/.local/bin:/home/pankhuri/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/pankhuri-LENOVO-IDEAPAD-500-15ISK:@/tmp/.ICE-unix/2761,unix/pankhuri-LENOVO-IDEAPAD-500-15ISK:/tmp/.ICE-unix/2761'), ('XDG_MENU_PREFIX', 'gnome-'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_GB.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('TERM_PROGRAM', 'vscode'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XMODIFIERS', '@im=ibus'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('SHELL', '/bin/bash'), ('NO_AT_BRIDGE', '1'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('TEXTDOMAINDIR', '/usr/share/locale/'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('XDG_VTNR', '2'), ('QT_IM_MODULE', 'ibus'), ('LC_ALL', 'en_US.UTF-8'), ('PWD', '/home/pankhuri/Week13/carViz/build/carviz'), ('CLUTTER_IM_MODULE', 'xim'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg')]), 'shell': False}
[0.099452] (-) TimerEvent: {}
[0.200738] (-) TimerEvent: {}
[0.302517] (-) TimerEvent: {}
[0.403104] (carviz) StdoutLine: {'line': b'[  4%] \x1b[34m\x1b[1mAutomatic MOC for target carViz\x1b[0m\n'}
[0.403545] (-) TimerEvent: {}
[0.431380] (carviz) StdoutLine: {'line': b'[  4%] Built target carViz_autogen\n'}
[0.490149] (carviz) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target carViz\x1b[0m\n'}
[0.503737] (-) TimerEvent: {}
[0.604186] (-) TimerEvent: {}
[0.704620] (-) TimerEvent: {}
[0.805054] (-) TimerEvent: {}
[0.819461] (carviz) StdoutLine: {'line': b'[  8%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/robot/actuators.cpp.o\x1b[0m\n'}
[0.820755] (carviz) StdoutLine: {'line': b'[ 12%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/robot/robot.cpp.o\x1b[0m\n'}
[0.834747] (carviz) StdoutLine: {'line': b'[ 16%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/main.cpp.o\x1b[0m\n'}
[0.837596] (carviz) StdoutLine: {'line': b'[ 20%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/robot/sensors.cpp.o\x1b[0m\n'}
[0.905150] (-) TimerEvent: {}
[1.005651] (-) TimerEvent: {}
[1.106765] (-) TimerEvent: {}
[1.207952] (-) TimerEvent: {}
[1.309110] (-) TimerEvent: {}
[1.410283] (-) TimerEvent: {}
[1.511517] (-) TimerEvent: {}
[1.612050] (-) TimerEvent: {}
[1.712699] (-) TimerEvent: {}
[1.813840] (-) TimerEvent: {}
[1.914987] (-) TimerEvent: {}
[2.015499] (-) TimerEvent: {}
[2.115996] (-) TimerEvent: {}
[2.217221] (-) TimerEvent: {}
[2.318472] (-) TimerEvent: {}
[2.420206] (-) TimerEvent: {}
[2.521425] (-) TimerEvent: {}
[2.622762] (-) TimerEvent: {}
[2.723435] (-) TimerEvent: {}
[2.824011] (-) TimerEvent: {}
[2.924581] (-) TimerEvent: {}
[3.025222] (-) TimerEvent: {}
[3.125804] (-) TimerEvent: {}
[3.226362] (-) TimerEvent: {}
[3.326954] (-) TimerEvent: {}
[3.427557] (-) TimerEvent: {}
[3.528159] (-) TimerEvent: {}
[3.563152] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/main.cpp:65:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K"/*" within comment [\x1b[01;35m\x1b[K-Wcomment\x1b[m\x1b[K]\n'}
[3.563721] (carviz) StderrLine: {'line': b'         ////****Do work her****////\n'}
[3.564124] (carviz) StderrLine: {'line': b'             \n'}
[3.628320] (-) TimerEvent: {}
[3.728909] (-) TimerEvent: {}
[3.829715] (-) TimerEvent: {}
[3.930295] (-) TimerEvent: {}
[4.030883] (-) TimerEvent: {}
[4.131473] (-) TimerEvent: {}
[4.232046] (-) TimerEvent: {}
[4.332601] (-) TimerEvent: {}
[4.433207] (-) TimerEvent: {}
[4.533813] (-) TimerEvent: {}
[4.634381] (-) TimerEvent: {}
[4.735115] (-) TimerEvent: {}
[4.836072] (-) TimerEvent: {}
[4.936616] (-) TimerEvent: {}
[5.037169] (-) TimerEvent: {}
[5.137741] (-) TimerEvent: {}
[5.238284] (-) TimerEvent: {}
[5.338862] (-) TimerEvent: {}
[5.439443] (-) TimerEvent: {}
[5.540031] (-) TimerEvent: {}
[5.640579] (-) TimerEvent: {}
[5.741152] (-) TimerEvent: {}
[5.841720] (-) TimerEvent: {}
[5.942250] (-) TimerEvent: {}
[6.042782] (-) TimerEvent: {}
[6.143345] (-) TimerEvent: {}
[6.243977] (-) TimerEvent: {}
[6.344555] (-) TimerEvent: {}
[6.445138] (-) TimerEvent: {}
[6.545689] (-) TimerEvent: {}
[6.646201] (-) TimerEvent: {}
[6.747515] (-) TimerEvent: {}
[6.848798] (-) TimerEvent: {}
[6.949334] (-) TimerEvent: {}
[7.049932] (-) TimerEvent: {}
[7.150569] (-) TimerEvent: {}
[7.251184] (-) TimerEvent: {}
[7.351828] (-) TimerEvent: {}
[7.452431] (-) TimerEvent: {}
[7.553034] (-) TimerEvent: {}
[7.653630] (-) TimerEvent: {}
[7.754202] (-) TimerEvent: {}
[7.855030] (-) TimerEvent: {}
[7.955597] (-) TimerEvent: {}
[8.056363] (-) TimerEvent: {}
[8.157046] (-) TimerEvent: {}
[8.257650] (-) TimerEvent: {}
[8.358222] (-) TimerEvent: {}
[8.458808] (-) TimerEvent: {}
[8.559433] (-) TimerEvent: {}
[8.660019] (-) TimerEvent: {}
[8.760606] (-) TimerEvent: {}
[8.861364] (-) TimerEvent: {}
[8.961968] (-) TimerEvent: {}
[9.062596] (-) TimerEvent: {}
[9.163244] (-) TimerEvent: {}
[9.263960] (-) TimerEvent: {}
[9.364583] (-) TimerEvent: {}
[9.465158] (-) TimerEvent: {}
[9.565720] (-) TimerEvent: {}
[9.666293] (-) TimerEvent: {}
[9.766885] (-) TimerEvent: {}
[9.867451] (-) TimerEvent: {}
[9.968010] (-) TimerEvent: {}
[10.068664] (-) TimerEvent: {}
[10.169310] (-) TimerEvent: {}
[10.269858] (-) TimerEvent: {}
[10.370407] (-) TimerEvent: {}
[10.470977] (-) TimerEvent: {}
[10.571542] (-) TimerEvent: {}
[10.672121] (-) TimerEvent: {}
[10.772727] (-) TimerEvent: {}
[10.873620] (-) TimerEvent: {}
[10.974192] (-) TimerEvent: {}
[11.074798] (-) TimerEvent: {}
[11.175404] (-) TimerEvent: {}
[11.275987] (-) TimerEvent: {}
[11.376557] (-) TimerEvent: {}
[11.477160] (-) TimerEvent: {}
[11.577755] (-) TimerEvent: {}
[11.678351] (-) TimerEvent: {}
[11.778936] (-) TimerEvent: {}
[11.879654] (-) TimerEvent: {}
[11.981376] (-) TimerEvent: {}
[12.174359] (-) TimerEvent: {}
[12.275508] (-) TimerEvent: {}
[12.376040] (-) TimerEvent: {}
[12.476575] (-) TimerEvent: {}
[12.577876] (-) TimerEvent: {}
[12.678537] (-) TimerEvent: {}
[12.779161] (-) TimerEvent: {}
[12.879782] (-) TimerEvent: {}
[12.980302] (-) TimerEvent: {}
[13.080847] (-) TimerEvent: {}
[13.181431] (-) TimerEvent: {}
[13.282109] (-) TimerEvent: {}
[13.382669] (-) TimerEvent: {}
[13.483323] (-) TimerEvent: {}
[13.583979] (-) TimerEvent: {}
[13.684461] (-) TimerEvent: {}
[13.784972] (-) TimerEvent: {}
[13.885437] (-) TimerEvent: {}
[13.985991] (-) TimerEvent: {}
[14.087060] (-) TimerEvent: {}
[14.108964] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/main.cpp:4:0\x1b[m\x1b[K:\n'}
[14.109511] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/config/config.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[KConfig::Properties Config::load(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[14.109967] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/config/config.h:18:29:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kargc\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[14.110337] (carviz) StderrLine: {'line': b' Config::Properties load(int \x1b[01;35m\x1b[Kargc\x1b[m\x1b[K, char* argv[])\n'}
[14.110690] (carviz) StderrLine: {'line': b'                             \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[14.187192] (-) TimerEvent: {}
[14.287795] (-) TimerEvent: {}
[14.388415] (-) TimerEvent: {}
[14.489210] (-) TimerEvent: {}
[14.589863] (-) TimerEvent: {}
[14.690478] (-) TimerEvent: {}
[14.791055] (-) TimerEvent: {}
[14.806083] (carviz) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/gui/threadupdategui.cpp.o\x1b[0m\n'}
[14.813491] (carviz) StdoutLine: {'line': b'[ 29%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/gui/gui.cpp.o\x1b[0m\n'}
[14.891173] (-) TimerEvent: {}
[14.991782] (-) TimerEvent: {}
[15.092361] (-) TimerEvent: {}
[15.192963] (-) TimerEvent: {}
[15.291606] (carviz) StdoutLine: {'line': b'[ 33%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/gui/widget/cameraswidget.cpp.o\x1b[0m\n'}
[15.293109] (-) TimerEvent: {}
[15.393829] (-) TimerEvent: {}
[15.494528] (-) TimerEvent: {}
[15.595133] (-) TimerEvent: {}
[15.695657] (-) TimerEvent: {}
[15.796285] (-) TimerEvent: {}
[15.896851] (-) TimerEvent: {}
[15.997360] (-) TimerEvent: {}
[16.097971] (-) TimerEvent: {}
[16.198516] (-) TimerEvent: {}
[16.298970] (-) TimerEvent: {}
[16.399705] (-) TimerEvent: {}
[16.500746] (-) TimerEvent: {}
[16.598342] (carviz) StdoutLine: {'line': b'[ 37%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/comm/cameraClient.cpp.o\x1b[0m\n'}
[16.600822] (-) TimerEvent: {}
[16.701668] (-) TimerEvent: {}
[16.802832] (-) TimerEvent: {}
[16.904234] (-) TimerEvent: {}
[17.005422] (-) TimerEvent: {}
[17.106785] (-) TimerEvent: {}
[17.208053] (-) TimerEvent: {}
[17.309352] (-) TimerEvent: {}
[17.410716] (-) TimerEvent: {}
[17.511986] (-) TimerEvent: {}
[17.613234] (-) TimerEvent: {}
[17.713756] (-) TimerEvent: {}
[17.814633] (-) TimerEvent: {}
[17.916048] (-) TimerEvent: {}
[18.017489] (-) TimerEvent: {}
[18.119029] (-) TimerEvent: {}
[18.220637] (-) TimerEvent: {}
[18.322253] (-) TimerEvent: {}
[18.423636] (-) TimerEvent: {}
[18.524934] (-) TimerEvent: {}
[18.626394] (-) TimerEvent: {}
[18.728225] (-) TimerEvent: {}
[18.829676] (-) TimerEvent: {}
[18.932555] (-) TimerEvent: {}
[19.034003] (-) TimerEvent: {}
[19.135460] (-) TimerEvent: {}
[19.236774] (-) TimerEvent: {}
[19.338434] (-) TimerEvent: {}
[19.439681] (-) TimerEvent: {}
[19.541232] (-) TimerEvent: {}
[19.643034] (-) TimerEvent: {}
[19.744845] (-) TimerEvent: {}
[19.846406] (-) TimerEvent: {}
[19.948179] (-) TimerEvent: {}
[20.049685] (-) TimerEvent: {}
[20.150442] (-) TimerEvent: {}
[20.251744] (-) TimerEvent: {}
[20.352697] (-) TimerEvent: {}
[20.453694] (-) TimerEvent: {}
[20.555157] (-) TimerEvent: {}
[20.656643] (-) TimerEvent: {}
[20.758165] (-) TimerEvent: {}
[20.860107] (-) TimerEvent: {}
[20.961740] (-) TimerEvent: {}
[21.063234] (-) TimerEvent: {}
[21.164705] (-) TimerEvent: {}
[21.266092] (-) TimerEvent: {}
[21.367313] (-) TimerEvent: {}
[21.468642] (-) TimerEvent: {}
[21.570148] (-) TimerEvent: {}
[21.671689] (-) TimerEvent: {}
[21.773190] (-) TimerEvent: {}
[21.874748] (-) TimerEvent: {}
[21.976096] (-) TimerEvent: {}
[22.078701] (-) TimerEvent: {}
[22.179951] (-) TimerEvent: {}
[22.281275] (-) TimerEvent: {}
[22.382807] (-) TimerEvent: {}
[22.484245] (-) TimerEvent: {}
[22.585756] (-) TimerEvent: {}
[22.687074] (-) TimerEvent: {}
[22.788075] (-) TimerEvent: {}
[22.889759] (-) TimerEvent: {}
[22.991410] (-) TimerEvent: {}
[23.092724] (-) TimerEvent: {}
[23.194470] (-) TimerEvent: {}
[23.295761] (-) TimerEvent: {}
[23.397298] (-) TimerEvent: {}
[23.499011] (-) TimerEvent: {}
[23.600385] (-) TimerEvent: {}
[23.701844] (-) TimerEvent: {}
[23.803198] (-) TimerEvent: {}
[23.904564] (-) TimerEvent: {}
[24.006752] (-) TimerEvent: {}
[24.108442] (-) TimerEvent: {}
[24.210043] (-) TimerEvent: {}
[24.311836] (-) TimerEvent: {}
[24.413387] (-) TimerEvent: {}
[24.514378] (-) TimerEvent: {}
[24.615889] (-) TimerEvent: {}
[24.717230] (-) TimerEvent: {}
[24.818703] (-) TimerEvent: {}
[24.920063] (-) TimerEvent: {}
[25.021731] (-) TimerEvent: {}
[25.123145] (-) TimerEvent: {}
[25.224128] (-) TimerEvent: {}
[25.325415] (-) TimerEvent: {}
[25.426825] (-) TimerEvent: {}
[25.528290] (-) TimerEvent: {}
[25.629817] (-) TimerEvent: {}
[25.731167] (-) TimerEvent: {}
[25.832553] (-) TimerEvent: {}
[25.934189] (-) TimerEvent: {}
[26.035645] (-) TimerEvent: {}
[26.136936] (-) TimerEvent: {}
[26.238575] (-) TimerEvent: {}
[26.340014] (-) TimerEvent: {}
[26.441745] (-) TimerEvent: {}
[26.542936] (-) TimerEvent: {}
[26.644063] (-) TimerEvent: {}
[26.745419] (-) TimerEvent: {}
[26.846752] (-) TimerEvent: {}
[26.948950] (-) TimerEvent: {}
[27.050561] (-) TimerEvent: {}
[27.151718] (-) TimerEvent: {}
[27.253175] (-) TimerEvent: {}
[27.355331] (-) TimerEvent: {}
[27.457040] (-) TimerEvent: {}
[27.558456] (-) TimerEvent: {}
[27.659882] (-) TimerEvent: {}
[27.761307] (-) TimerEvent: {}
[27.866164] (-) TimerEvent: {}
[27.966708] (-) TimerEvent: {}
[28.067816] (-) TimerEvent: {}
[28.169267] (-) TimerEvent: {}
[28.270704] (-) TimerEvent: {}
[28.372115] (-) TimerEvent: {}
[28.473653] (-) TimerEvent: {}
[28.575060] (-) TimerEvent: {}
[28.676362] (-) TimerEvent: {}
[28.777493] (-) TimerEvent: {}
[28.878305] (-) TimerEvent: {}
[28.979840] (-) TimerEvent: {}
[29.081383] (-) TimerEvent: {}
[29.182840] (-) TimerEvent: {}
[29.284337] (-) TimerEvent: {}
[29.385866] (-) TimerEvent: {}
[29.487256] (-) TimerEvent: {}
[29.588731] (-) TimerEvent: {}
[29.689761] (-) TimerEvent: {}
[29.790516] (-) TimerEvent: {}
[29.891887] (-) TimerEvent: {}
[29.993318] (-) TimerEvent: {}
[30.094896] (-) TimerEvent: {}
[30.196173] (-) TimerEvent: {}
[30.297496] (-) TimerEvent: {}
[30.399022] (-) TimerEvent: {}
[30.500371] (-) TimerEvent: {}
[30.601513] (-) TimerEvent: {}
[30.702368] (-) TimerEvent: {}
[30.803850] (-) TimerEvent: {}
[30.905519] (-) TimerEvent: {}
[31.007429] (-) TimerEvent: {}
[31.108877] (-) TimerEvent: {}
[31.210480] (-) TimerEvent: {}
[31.311793] (-) TimerEvent: {}
[31.413121] (-) TimerEvent: {}
[31.514625] (-) TimerEvent: {}
[31.616259] (-) TimerEvent: {}
[31.717840] (-) TimerEvent: {}
[31.819302] (-) TimerEvent: {}
[31.921194] (-) TimerEvent: {}
[32.022462] (-) TimerEvent: {}
[32.123943] (-) TimerEvent: {}
[32.225455] (-) TimerEvent: {}
[32.327054] (-) TimerEvent: {}
[32.428365] (-) TimerEvent: {}
[32.529898] (-) TimerEvent: {}
[32.631778] (-) TimerEvent: {}
[32.733108] (-) TimerEvent: {}
[32.834721] (-) TimerEvent: {}
[32.936150] (-) TimerEvent: {}
[33.037787] (-) TimerEvent: {}
[33.139310] (-) TimerEvent: {}
[33.240753] (-) TimerEvent: {}
[33.342159] (-) TimerEvent: {}
[33.443552] (-) TimerEvent: {}
[33.544863] (-) TimerEvent: {}
[33.646500] (-) TimerEvent: {}
[33.747838] (-) TimerEvent: {}
[33.849180] (-) TimerEvent: {}
[33.950961] (-) TimerEvent: {}
[34.052438] (-) TimerEvent: {}
[34.154134] (-) TimerEvent: {}
[34.255717] (-) TimerEvent: {}
[34.357121] (-) TimerEvent: {}
[34.458797] (-) TimerEvent: {}
[34.561978] (-) TimerEvent: {}
[34.663092] (-) TimerEvent: {}
[34.764305] (-) TimerEvent: {}
[34.865247] (-) TimerEvent: {}
[34.966701] (-) TimerEvent: {}
[35.067911] (-) TimerEvent: {}
[35.168530] (-) TimerEvent: {}
[35.269896] (-) TimerEvent: {}
[35.370422] (-) TimerEvent: {}
[35.470910] (-) TimerEvent: {}
[35.571436] (-) TimerEvent: {}
[35.671936] (-) TimerEvent: {}
[35.772446] (-) TimerEvent: {}
[35.872961] (-) TimerEvent: {}
[35.974516] (-) TimerEvent: {}
[36.076640] (-) TimerEvent: {}
[36.177731] (-) TimerEvent: {}
[36.278385] (-) TimerEvent: {}
[36.379816] (-) TimerEvent: {}
[36.490291] (-) TimerEvent: {}
[36.591180] (-) TimerEvent: {}
[36.693391] (-) TimerEvent: {}
[36.795172] (-) TimerEvent: {}
[36.896502] (-) TimerEvent: {}
[36.997385] (-) TimerEvent: {}
[37.099152] (-) TimerEvent: {}
[37.200965] (-) TimerEvent: {}
[37.302613] (-) TimerEvent: {}
[37.403546] (-) TimerEvent: {}
[37.504218] (-) TimerEvent: {}
[37.605130] (-) TimerEvent: {}
[37.706276] (-) TimerEvent: {}
[37.807274] (-) TimerEvent: {}
[37.908577] (-) TimerEvent: {}
[38.009765] (-) TimerEvent: {}
[38.112884] (-) TimerEvent: {}
[38.214911] (-) TimerEvent: {}
[38.316022] (-) TimerEvent: {}
[38.416468] (-) TimerEvent: {}
[38.517015] (-) TimerEvent: {}
[38.617597] (-) TimerEvent: {}
[38.718164] (-) TimerEvent: {}
[38.818770] (-) TimerEvent: {}
[38.919393] (-) TimerEvent: {}
[39.020008] (-) TimerEvent: {}
[39.120668] (-) TimerEvent: {}
[39.221351] (-) TimerEvent: {}
[39.321889] (-) TimerEvent: {}
[39.422459] (-) TimerEvent: {}
[39.523017] (-) TimerEvent: {}
[39.623563] (-) TimerEvent: {}
[39.724137] (-) TimerEvent: {}
[39.824698] (-) TimerEvent: {}
[39.925251] (-) TimerEvent: {}
[40.025816] (-) TimerEvent: {}
[40.126354] (-) TimerEvent: {}
[40.226938] (-) TimerEvent: {}
[40.327499] (-) TimerEvent: {}
[40.428076] (-) TimerEvent: {}
[40.528620] (-) TimerEvent: {}
[40.629174] (-) TimerEvent: {}
[40.729836] (-) TimerEvent: {}
[40.830439] (-) TimerEvent: {}
[40.931426] (-) TimerEvent: {}
[41.032667] (-) TimerEvent: {}
[41.133941] (-) TimerEvent: {}
[41.235134] (-) TimerEvent: {}
[41.336367] (-) TimerEvent: {}
[41.437592] (-) TimerEvent: {}
[41.538791] (-) TimerEvent: {}
[41.640046] (-) TimerEvent: {}
[41.741294] (-) TimerEvent: {}
[41.841904] (-) TimerEvent: {}
[41.942513] (-) TimerEvent: {}
[42.043108] (-) TimerEvent: {}
[42.143681] (-) TimerEvent: {}
[42.244250] (-) TimerEvent: {}
[42.344789] (-) TimerEvent: {}
[42.445334] (-) TimerEvent: {}
[42.545880] (-) TimerEvent: {}
[42.646463] (-) TimerEvent: {}
[42.747032] (-) TimerEvent: {}
[42.847589] (-) TimerEvent: {}
[42.948139] (-) TimerEvent: {}
[43.048700] (-) TimerEvent: {}
[43.149261] (-) TimerEvent: {}
[43.249821] (-) TimerEvent: {}
[43.350400] (-) TimerEvent: {}
[43.450965] (-) TimerEvent: {}
[43.551514] (-) TimerEvent: {}
[43.652074] (-) TimerEvent: {}
[43.752612] (-) TimerEvent: {}
[43.853234] (-) TimerEvent: {}
[43.953879] (-) TimerEvent: {}
[44.054484] (-) TimerEvent: {}
[44.155121] (-) TimerEvent: {}
[44.255711] (-) TimerEvent: {}
[44.356271] (-) TimerEvent: {}
[44.456812] (-) TimerEvent: {}
[44.557360] (-) TimerEvent: {}
[44.657939] (-) TimerEvent: {}
[44.758500] (-) TimerEvent: {}
[44.859072] (-) TimerEvent: {}
[44.959604] (-) TimerEvent: {}
[45.060152] (-) TimerEvent: {}
[45.160707] (-) TimerEvent: {}
[45.261317] (-) TimerEvent: {}
[45.361933] (-) TimerEvent: {}
[45.462490] (-) TimerEvent: {}
[45.563041] (-) TimerEvent: {}
[45.663601] (-) TimerEvent: {}
[45.764163] (-) TimerEvent: {}
[45.864832] (-) TimerEvent: {}
[45.965989] (-) TimerEvent: {}
[46.066546] (-) TimerEvent: {}
[46.167141] (-) TimerEvent: {}
[46.267734] (-) TimerEvent: {}
[46.368326] (-) TimerEvent: {}
[46.468892] (-) TimerEvent: {}
[46.569479] (-) TimerEvent: {}
[46.670107] (-) TimerEvent: {}
[46.774678] (-) TimerEvent: {}
[46.875273] (-) TimerEvent: {}
[46.975879] (-) TimerEvent: {}
[47.076492] (-) TimerEvent: {}
[47.177484] (-) TimerEvent: {}
[47.278823] (-) TimerEvent: {}
[47.380363] (-) TimerEvent: {}
[47.481834] (-) TimerEvent: {}
[47.583350] (-) TimerEvent: {}
[47.684630] (-) TimerEvent: {}
[47.786537] (-) TimerEvent: {}
[47.888041] (-) TimerEvent: {}
[47.989415] (-) TimerEvent: {}
[48.090990] (-) TimerEvent: {}
[48.192356] (-) TimerEvent: {}
[48.293744] (-) TimerEvent: {}
[48.395156] (-) TimerEvent: {}
[48.496542] (-) TimerEvent: {}
[48.597883] (-) TimerEvent: {}
[48.699699] (-) TimerEvent: {}
[48.801042] (-) TimerEvent: {}
[48.902361] (-) TimerEvent: {}
[49.003646] (-) TimerEvent: {}
[49.104867] (-) TimerEvent: {}
[49.206222] (-) TimerEvent: {}
[49.307452] (-) TimerEvent: {}
[49.408791] (-) TimerEvent: {}
[49.510011] (-) TimerEvent: {}
[49.611819] (-) TimerEvent: {}
[49.713151] (-) TimerEvent: {}
[49.814473] (-) TimerEvent: {}
[49.915648] (-) TimerEvent: {}
[50.016924] (-) TimerEvent: {}
[50.128956] (-) TimerEvent: {}
[50.230422] (-) TimerEvent: {}
[50.334629] (-) TimerEvent: {}
[50.435294] (-) TimerEvent: {}
[50.535796] (-) TimerEvent: {}
[50.636366] (-) TimerEvent: {}
[50.737451] (-) TimerEvent: {}
[50.838132] (-) TimerEvent: {}
[50.938733] (-) TimerEvent: {}
[51.039370] (-) TimerEvent: {}
[51.140005] (-) TimerEvent: {}
[51.240564] (-) TimerEvent: {}
[51.341153] (-) TimerEvent: {}
[51.441886] (-) TimerEvent: {}
[51.525471] (carviz) StdoutLine: {'line': b'[ 41%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/comm/motorsClient.cpp.o\x1b[0m\n'}
[51.541971] (-) TimerEvent: {}
[51.642434] (-) TimerEvent: {}
[51.651106] (carviz) StdoutLine: {'line': b'[ 45%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/comm/laserClient.cpp.o\x1b[0m\n'}
[51.742579] (-) TimerEvent: {}
[51.843662] (-) TimerEvent: {}
[51.944583] (-) TimerEvent: {}
[51.987283] (carviz) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/comm/pose3dClient.cpp.o\x1b[0m\n'}
[52.044711] (-) TimerEvent: {}
[52.145248] (-) TimerEvent: {}
[52.245823] (-) TimerEvent: {}
[52.346864] (-) TimerEvent: {}
[52.447710] (-) TimerEvent: {}
[52.548288] (-) TimerEvent: {}
[52.649136] (-) TimerEvent: {}
[52.750466] (-) TimerEvent: {}
[52.851652] (-) TimerEvent: {}
[52.952784] (-) TimerEvent: {}
[53.054187] (-) TimerEvent: {}
[53.155504] (-) TimerEvent: {}
[53.256635] (-) TimerEvent: {}
[53.357935] (-) TimerEvent: {}
[53.459140] (-) TimerEvent: {}
[53.560406] (-) TimerEvent: {}
[53.661666] (-) TimerEvent: {}
[53.762970] (-) TimerEvent: {}
[53.864110] (-) TimerEvent: {}
[53.965501] (-) TimerEvent: {}
[54.016002] (carviz) StdoutLine: {'line': b'[ 54%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/comm/ros2src/listenerCameraros2.cpp.o\x1b[0m\n'}
[54.065634] (-) TimerEvent: {}
[54.167157] (-) TimerEvent: {}
[54.268909] (-) TimerEvent: {}
[54.370194] (-) TimerEvent: {}
[54.470701] (-) TimerEvent: {}
[54.571242] (-) TimerEvent: {}
[54.671781] (-) TimerEvent: {}
[54.773876] (-) TimerEvent: {}
[54.874432] (-) TimerEvent: {}
[54.975019] (-) TimerEvent: {}
[55.075567] (-) TimerEvent: {}
[55.176128] (-) TimerEvent: {}
[55.276666] (-) TimerEvent: {}
[55.377259] (-) TimerEvent: {}
[55.477879] (-) TimerEvent: {}
[55.578438] (-) TimerEvent: {}
[55.679010] (-) TimerEvent: {}
[55.779576] (-) TimerEvent: {}
[55.880514] (-) TimerEvent: {}
[55.981069] (-) TimerEvent: {}
[56.082187] (-) TimerEvent: {}
[56.183402] (-) TimerEvent: {}
[56.283936] (-) TimerEvent: {}
[56.384503] (-) TimerEvent: {}
[56.485050] (-) TimerEvent: {}
[56.585620] (-) TimerEvent: {}
[56.686174] (-) TimerEvent: {}
[56.786697] (-) TimerEvent: {}
[56.887275] (-) TimerEvent: {}
[56.987818] (-) TimerEvent: {}
[57.088369] (-) TimerEvent: {}
[57.188988] (-) TimerEvent: {}
[57.289551] (-) TimerEvent: {}
[57.390157] (-) TimerEvent: {}
[57.490744] (-) TimerEvent: {}
[57.591307] (-) TimerEvent: {}
[57.691902] (-) TimerEvent: {}
[57.792456] (-) TimerEvent: {}
[57.893006] (-) TimerEvent: {}
[57.993641] (-) TimerEvent: {}
[58.094460] (-) TimerEvent: {}
[58.195076] (-) TimerEvent: {}
[58.295626] (-) TimerEvent: {}
[58.396179] (-) TimerEvent: {}
[58.496738] (-) TimerEvent: {}
[58.597296] (-) TimerEvent: {}
[58.697928] (-) TimerEvent: {}
[58.798476] (-) TimerEvent: {}
[58.899118] (-) TimerEvent: {}
[58.999690] (-) TimerEvent: {}
[59.100237] (-) TimerEvent: {}
[59.200783] (-) TimerEvent: {}
[59.301368] (-) TimerEvent: {}
[59.401965] (-) TimerEvent: {}
[59.502501] (-) TimerEvent: {}
[59.603088] (-) TimerEvent: {}
[59.703647] (-) TimerEvent: {}
[59.804243] (-) TimerEvent: {}
[59.904867] (-) TimerEvent: {}
[60.005499] (-) TimerEvent: {}
[60.106220] (-) TimerEvent: {}
[60.206854] (-) TimerEvent: {}
[60.307479] (-) TimerEvent: {}
[60.371589] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KComm::ListenerCamera::ListenerCamera(int, char**, std::__cxx11::string, std::__cxx11::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[60.372163] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:5:37:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kargc\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[60.372612] (carviz) StderrLine: {'line': b'  ListenerCamera::ListenerCamera(int \x1b[01;35m\x1b[Kargc\x1b[m\x1b[K, char** argv, std::string nodeName, std::string topic): Node(nodeName)\n'}
[60.373065] (carviz) StderrLine: {'line': b'                                     \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[60.373478] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:5:50:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kargv\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[60.373918] (carviz) StderrLine: {'line': b'  ListenerCamera::ListenerCamera(int argc, char** \x1b[01;35m\x1b[Kargv\x1b[m\x1b[K, std::string nodeName, std::string topic): Node(nodeName)\n'}
[60.374339] (carviz) StderrLine: {'line': b'                                                  \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[60.407587] (-) TimerEvent: {}
[60.508180] (-) TimerEvent: {}
[60.608781] (-) TimerEvent: {}
[60.709393] (-) TimerEvent: {}
[60.810061] (-) TimerEvent: {}
[60.910641] (-) TimerEvent: {}
[61.011211] (-) TimerEvent: {}
[61.111768] (-) TimerEvent: {}
[61.212323] (-) TimerEvent: {}
[61.256653] (carviz) StdoutLine: {'line': b'[ 58%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/comm/ros2src/listenerLaserros2.cpp.o\x1b[0m\n'}
[61.312452] (-) TimerEvent: {}
[61.413038] (-) TimerEvent: {}
[61.513601] (-) TimerEvent: {}
[61.614143] (-) TimerEvent: {}
[61.714652] (-) TimerEvent: {}
[61.815193] (-) TimerEvent: {}
[61.915753] (-) TimerEvent: {}
[62.016309] (-) TimerEvent: {}
[62.116863] (-) TimerEvent: {}
[62.217411] (-) TimerEvent: {}
[62.317999] (-) TimerEvent: {}
[62.381399] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_base.hpp:28:0\x1b[m\x1b[K,\n'}
[62.382520] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager_impl.hpp:38\x1b[m\x1b[K,\n'}
[62.383370] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager.hpp:32\x1b[m\x1b[K,\n'}
[62.384136] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/publisher.hpp:35\x1b[m\x1b[K,\n'}
[62.384583] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[62.385611] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[62.386123] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[62.386527] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[62.386888] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executor.hpp:32\x1b[m\x1b[K,\n'}
[62.387282] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors/multi_threaded_executor.hpp:24\x1b[m\x1b[K,\n'}
[62.387704] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[62.388078] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[62.388454] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/../ros2head/listenerCameraros2.hpp:3\x1b[m\x1b[K,\n'}
[62.388821] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:1\x1b[m\x1b[K:\n'}
[62.389208] (carviz) StderrLine: {'line': b'/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[62.389595] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:88:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; Alloc = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.390017] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.390404] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.390771] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:9:69:\x1b[m\x1b[K   required from here\n'}
[62.391166] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> >::SharedPtrCallback {aka std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>}\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99)\n'}
[62.391515] (carviz) StderrLine: {'line': b'     \x1b[01;31m\x1b[Kshared_ptr_callback_ = callback\x1b[m\x1b[K;\n'}
[62.391854] (carviz) StderrLine: {'line': b'     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[62.392182] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/7/future:48:0\x1b[m\x1b[K,\n'}
[62.392506] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[62.392843] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[62.393173] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/../ros2head/listenerCameraros2.hpp:3\x1b[m\x1b[K,\n'}
[62.393558] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:1\x1b[m\x1b[K:\n'}
[62.393903] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:480:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >}]\n'}
[62.394290] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const function& __x)\n'}
[62.394673] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[62.395010] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:480:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.395418] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:498:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >}]\n'}
[62.395798] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(function&& __x) noexcept\n'}
[62.396201] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[62.396549] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:498:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.396891] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:512:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >}; std::nullptr_t = std::nullptr_t]\n'}
[62.397270] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(nullptr_t) noexcept\n'}
[62.409817] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[62.410343] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:512:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.410740] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:541:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Functor> std::function<_Res(_ArgTypes ...)>::_Requires<std::function<_Res(_ArgTypes ...)>::_Callable<typename std::decay<_U1>::type>, std::function<_Res(_ArgTypes ...)>&> std::function<_Res(_ArgTypes ...)>::operator=(_Functor&&) [with _Functor = _Functor; _Res = void; _ArgTypes = {std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >}]\n'}
[62.411127] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Functor&& __f)\n'}
[62.411488] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[62.411837] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:541:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[62.412229] (carviz) StderrLine: {'line': b'/usr/include/c++/7/bits/std_function.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor> std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>::_Requires<std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>::_Callable<typename std::decay<_Tp>::type, typename std::result_of<typename std::decay<_Tp>::type&(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>::type>, std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>&> std::function<void(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>::operator=<_Functor>(_Functor&&) [with _Functor = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[62.412646] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.413039] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:88:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; Alloc = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.413413] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.413829] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.414231] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:9:69:\x1b[m\x1b[K   required from here\n'}
[62.414578] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:541:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kclass std::result_of<std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>&(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.414953] (carviz) StderrLine: {'line': b'/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[62.415304] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:88:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; Alloc = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.415663] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; CallbackMessageT = sensor_msgs::msg::Image_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.416043] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.416407] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:9:69:\x1b[m\x1b[K   required from here\n'}
[62.416738] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:550:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Functor> std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::reference_wrapper<_Functor>) [with _Functor = _Functor; _Res = void; _ArgTypes = {std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >}]\n'}
[62.417106] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(reference_wrapper<_Functor> __f) noexcept\n'}
[62.417472] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[62.417894] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:550:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[62.418214] (-) TimerEvent: {}
[62.422224] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_base.hpp:28:0\x1b[m\x1b[K,\n'}
[62.422709] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager_impl.hpp:38\x1b[m\x1b[K,\n'}
[62.423080] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager.hpp:32\x1b[m\x1b[K,\n'}
[62.423411] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/publisher.hpp:35\x1b[m\x1b[K,\n'}
[62.423706] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[62.424028] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[62.424340] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[62.424639] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[62.424940] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executor.hpp:32\x1b[m\x1b[K,\n'}
[62.425230] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors/multi_threaded_executor.hpp:24\x1b[m\x1b[K,\n'}
[62.425520] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[62.425842] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[62.426127] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/../ros2head/listenerCameraros2.hpp:3\x1b[m\x1b[K,\n'}
[62.426404] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerCameraros2.cpp:1\x1b[m\x1b[K:\n'}
[62.426659] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerCamera::*(Comm::ListenerCamera*, boost::arg<1>))(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::reference_wrapper<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[62.426929] (carviz) StderrLine: {'line': b'     \x1b[01;36m\x1b[Kshared_ptr_callback_ = callback\x1b[m\x1b[K;\n'}
[62.427212] (carviz) StderrLine: {'line': b'     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[62.518421] (-) TimerEvent: {}
[62.618949] (-) TimerEvent: {}
[62.719520] (-) TimerEvent: {}
[62.802737] (carviz) StdoutLine: {'line': b'[ 62%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/comm/ros2src/listenerPoseros2.cpp.o\x1b[0m\n'}
[62.819633] (-) TimerEvent: {}
[62.920199] (-) TimerEvent: {}
[63.020803] (-) TimerEvent: {}
[63.121404] (-) TimerEvent: {}
[63.221972] (-) TimerEvent: {}
[63.322491] (-) TimerEvent: {}
[63.346069] (carviz) StdoutLine: {'line': b'[ 66%] \x1b[32mBuilding CXX object CMakeFiles/carViz.dir/comm/ros2src/publisherMotorsros2.cpp.o\x1b[0m\n'}
[63.402571] (carviz) StdoutLine: {'line': b"CMakeFiles/carViz.dir/build.make:446: recipe for target 'CMakeFiles/carViz.dir/comm/ros2src/listenerCameraros2.cpp.o' failed\n"}
[63.403050] (carviz) StderrLine: {'line': b'make[2]: *** [CMakeFiles/carViz.dir/comm/ros2src/listenerCameraros2.cpp.o] Error 1\n'}
[63.403425] (carviz) StderrLine: {'line': b'make[2]: *** Waiting for unfinished jobs....\n'}
[63.422591] (-) TimerEvent: {}
[63.523110] (-) TimerEvent: {}
[63.623639] (-) TimerEvent: {}
[63.724765] (-) TimerEvent: {}
[63.825780] (-) TimerEvent: {}
[63.927056] (-) TimerEvent: {}
[64.028068] (-) TimerEvent: {}
[64.129234] (-) TimerEvent: {}
[64.230335] (-) TimerEvent: {}
[64.331455] (-) TimerEvent: {}
[64.432666] (-) TimerEvent: {}
[64.533896] (-) TimerEvent: {}
[64.635002] (-) TimerEvent: {}
[64.736296] (-) TimerEvent: {}
[64.837390] (-) TimerEvent: {}
[64.938545] (-) TimerEvent: {}
[65.039618] (-) TimerEvent: {}
[65.140671] (-) TimerEvent: {}
[65.241774] (-) TimerEvent: {}
[65.343007] (-) TimerEvent: {}
[65.444156] (-) TimerEvent: {}
[65.545238] (-) TimerEvent: {}
[65.646677] (-) TimerEvent: {}
[65.747774] (-) TimerEvent: {}
[65.848884] (-) TimerEvent: {}
[65.949999] (-) TimerEvent: {}
[66.051007] (-) TimerEvent: {}
[66.152366] (-) TimerEvent: {}
[66.255157] (-) TimerEvent: {}
[66.356577] (-) TimerEvent: {}
[66.457763] (-) TimerEvent: {}
[66.559094] (-) TimerEvent: {}
[66.660575] (-) TimerEvent: {}
[66.762165] (-) TimerEvent: {}
[66.863356] (-) TimerEvent: {}
[66.964674] (-) TimerEvent: {}
[66.974146] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerLaserros2.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KComm::ListenerLaser::ListenerLaser(int, char**, std::__cxx11::string, std::__cxx11::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[66.974647] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerLaserros2.cpp:16:4:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksubscription__\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[66.975018] (carviz) StderrLine: {'line': b'    \x1b[01;31m\x1b[Ksubscription__\x1b[m\x1b[K = this->create_subscription<const sensor_msgs::msg::LaserScan>(\n'}
[66.975351] (carviz) StderrLine: {'line': b'    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[66.978054] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerLaserros2.cpp:16:4:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternative: \xe2\x80\x98\x1b[01m\x1b[Ksubscription_\x1b[m\x1b[K\xe2\x80\x99\n'}
[66.978480] (carviz) StderrLine: {'line': b'    \x1b[01;36m\x1b[Ksubscription__\x1b[m\x1b[K = this->create_subscription<const sensor_msgs::msg::LaserScan>(\n'}
[66.980000] (carviz) StderrLine: {'line': b'    \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[66.980444] (carviz) StderrLine: {'line': b'    \x1b[32m\x1b[Ksubscription_\x1b[m\x1b[K\n'}
[66.980786] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerLaserros2.cpp:17:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klaserallback\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[KComm::ListenerLaser\x1b[m\x1b[K\xe2\x80\x99\n'}
[66.981118] (carviz) StderrLine: {'line': b'       topic, 10, std::bind(&ListenerLaser::\x1b[01;31m\x1b[Klaserallback\x1b[m\x1b[K, this, _1));\n'}
[66.981424] (carviz) StderrLine: {'line': b'                                            \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[66.983383] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerLaserros2.cpp:5:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kargc\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[66.983757] (carviz) StderrLine: {'line': b'  ListenerLaser::ListenerLaser(int \x1b[01;35m\x1b[Kargc\x1b[m\x1b[K, char** argv, std::string nodeName, std::string topic)\n'}
[66.984061] (carviz) StderrLine: {'line': b'                                   \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[66.986748] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerLaserros2.cpp:5:48:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kargv\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[66.988641] (carviz) StderrLine: {'line': b'  ListenerLaser::ListenerLaser(int argc, char** \x1b[01;35m\x1b[Kargv\x1b[m\x1b[K, std::string nodeName, std::string topic)\n'}
[66.988997] (carviz) StderrLine: {'line': b'                                                \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[66.989306] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerLaserros2.cpp:\x1b[m\x1b[K At global scope:\n'}
[66.991488] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerLaserros2.cpp:36:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaseScan\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[66.991902] (carviz) StderrLine: {'line': b'  ListenerLaser::lasercallback(const sensor_msgs::msg::\x1b[01;31m\x1b[KLaseScan\x1b[m\x1b[K::SharedPtr laser_msg){\n'}
[66.992217] (carviz) StderrLine: {'line': b'                                                       \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[66.992544] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerLaserros2.cpp:36:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Klaser_msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[66.992867] (carviz) StderrLine: {'line': b'  ListenerLaser::lasercallback(const sensor_msgs::msg::LaseScan::SharedPtr \x1b[01;31m\x1b[Klaser_msg\x1b[m\x1b[K){\n'}
[66.993205] (carviz) StderrLine: {'line': b'                                                                           \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[66.993514] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerLaserros2.cpp:36:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Klaser_msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[66.993851] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerLaserros2.cpp:36:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected initializer before \xe2\x80\x98\x1b[01m\x1b[Klaser_msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[67.064857] (-) TimerEvent: {}
[67.166116] (-) TimerEvent: {}
[67.267237] (-) TimerEvent: {}
[67.368382] (-) TimerEvent: {}
[67.469975] (-) TimerEvent: {}
[67.471140] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/publisherMotorsros2.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KComm::PublisherMotors::PublisherMotors(int, char**, std::__cxx11::string, std::__cxx11::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[67.471556] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/publisherMotorsros2.cpp:19:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kunable to find numeric literal operator \xe2\x80\x98\x1b[01m\x1b[Koperator""ms\x1b[m\x1b[K\xe2\x80\x99\n'}
[67.471887] (carviz) StderrLine: {'line': b'      timer_ = this->create_wall_timer(\x1b[01;31m\x1b[K500ms\x1b[m\x1b[K, std::bind(&PublisherMotors::publish, this));\n'}
[67.472197] (carviz) StderrLine: {'line': b'                                       \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[67.484589] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/publisherMotorsros2.cpp:5:39:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kargc\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[67.485034] (carviz) StderrLine: {'line': b'  PublisherMotors::PublisherMotors(int \x1b[01;35m\x1b[Kargc\x1b[m\x1b[K, char** argv, std::string nodeName, std::string topic)\n'}
[67.486502] (carviz) StderrLine: {'line': b'                                       \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[67.486783] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/publisherMotorsros2.cpp:5:52:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kargv\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[67.487053] (carviz) StderrLine: {'line': b'  PublisherMotors::PublisherMotors(int argc, char** \x1b[01;35m\x1b[Kargv\x1b[m\x1b[K, std::string nodeName, std::string topic)\n'}
[67.487277] (carviz) StderrLine: {'line': b'                                                    \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[67.487489] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/publisherMotorsros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Comm::PublisherMotors::publish()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[67.487699] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/publisherMotorsros2.cpp:32:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktranslate_twist_messages\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[67.487911] (carviz) StderrLine: {'line': b'   vel = \x1b[01;31m\x1b[Ktranslate_twist_messages\x1b[m\x1b[K (cmdvel);\n'}
[67.488128] (carviz) StderrLine: {'line': b'         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[67.505699] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/publisherMotorsros2.cpp:32:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternative: \xe2\x80\x98\x1b[01m\x1b[Ktranslate_image_messages\x1b[m\x1b[K\xe2\x80\x99\n'}
[67.506158] (carviz) StderrLine: {'line': b'   vel = \x1b[01;36m\x1b[Ktranslate_twist_messages\x1b[m\x1b[K (cmdvel);\n'}
[67.506510] (carviz) StderrLine: {'line': b'         \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[67.506840] (carviz) StderrLine: {'line': b'         \x1b[32m\x1b[Ktranslate_image_messages\x1b[m\x1b[K\n'}
[67.507137] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/publisherMotorsros2.cpp:33:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kusing SharedPtr = class std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > > > {aka class std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist_<std::allocator<void> > > >}\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpublish\x1b[m\x1b[K\xe2\x80\x99\n'}
[67.507418] (carviz) StderrLine: {'line': b'   this->publisher_.\x1b[01;31m\x1b[Kpublish\x1b[m\x1b[K(vel);////***check the correct syntac here****////\n'}
[67.507686] (carviz) StderrLine: {'line': b'                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[67.570095] (-) TimerEvent: {}
[67.671384] (-) TimerEvent: {}
[67.772649] (-) TimerEvent: {}
[67.874085] (-) TimerEvent: {}
[67.975344] (-) TimerEvent: {}
[68.076605] (-) TimerEvent: {}
[68.178460] (-) TimerEvent: {}
[68.211805] (carviz) StdoutLine: {'line': b"CMakeFiles/carViz.dir/build.make:470: recipe for target 'CMakeFiles/carViz.dir/comm/ros2src/listenerLaserros2.cpp.o' failed\n"}
[68.213817] (carviz) StderrLine: {'line': b'make[2]: *** [CMakeFiles/carViz.dir/comm/ros2src/listenerLaserros2.cpp.o] Error 1\n'}
[68.278567] (-) TimerEvent: {}
[68.379174] (-) TimerEvent: {}
[68.444720] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KComm::ListenerPose::ListenerPose(int, char**, std::__cxx11::string, std::__cxx11::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[68.445316] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:5:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Node::Node()\x1b[m\x1b[K\xe2\x80\x99\n'}
[68.445804] (carviz) StderrLine: {'line': b'  ListenerPose::ListenerPose(int argc, char** argv, std::string nodeName, std::string topic\x1b[01;31m\x1b[K)\x1b[m\x1b[K{\n'}
[68.446194] (carviz) StderrLine: {'line': b'                                                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[68.446560] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[68.446947] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[68.447312] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[68.447721] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/../ros2head/listenerPoseros2.hpp:1\x1b[m\x1b[K,\n'}
[68.448229] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:1\x1b[m\x1b[K:\n'}
[68.448594] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node.hpp:1174:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: rclcpp::Node::Node(const rclcpp::Node&, const string&)\n'}
[68.449250] (carviz) StderrLine: {'line': b'   \x1b[01;36m\x1b[KNode\x1b[m\x1b[K(\n'}
[68.449732] (carviz) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[68.450262] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node.hpp:1174:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 0 provided\n'}
[68.450779] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node.hpp:94:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: rclcpp::Node::Node(const string&, const string&, const rclcpp::NodeOptions&)\n'}
[68.451542] (carviz) StderrLine: {'line': b'   explicit \x1b[01;36m\x1b[KNode\x1b[m\x1b[K(\n'}
[68.452045] (carviz) StderrLine: {'line': b'            \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[68.452536] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node.hpp:94:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 3 arguments, 0 provided\n'}
[68.453116] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node.hpp:83:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: rclcpp::Node::Node(const string&, const rclcpp::NodeOptions&)\n'}
[68.453649] (carviz) StderrLine: {'line': b'   explicit \x1b[01;36m\x1b[KNode\x1b[m\x1b[K(\n'}
[68.454171] (carviz) StderrLine: {'line': b'            \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[68.454602] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node.hpp:83:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 0 provided\n'}
[68.477647] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:5:33:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kargc\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[68.478221] (carviz) StderrLine: {'line': b'  ListenerPose::ListenerPose(int \x1b[01;35m\x1b[Kargc\x1b[m\x1b[K, char** argv, std::string nodeName, std::string topic){\n'}
[68.479091] (carviz) StderrLine: {'line': b'                                 \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[68.479533] (-) TimerEvent: {}
[68.479926] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:5:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kargv\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[68.480335] (carviz) StderrLine: {'line': b'  ListenerPose::ListenerPose(int argc, char** \x1b[01;35m\x1b[Kargv\x1b[m\x1b[K, std::string nodeName, std::string topic){\n'}
[68.480912] (carviz) StderrLine: {'line': b'                                              \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[68.481493] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:\x1b[m\x1b[K At global scope:\n'}
[68.482133] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:37:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kprototype for \xe2\x80\x98\x1b[01m\x1b[Kvoid Comm::ListenerPose::posecallback(nav_msgs::msg::Odometry)\x1b[m\x1b[K\xe2\x80\x99 does not match any in class \xe2\x80\x98\x1b[01m\x1b[KComm::ListenerPose\x1b[m\x1b[K\xe2\x80\x99\n'}
[68.482566] (carviz) StderrLine: {'line': b'  \x1b[01;31m\x1b[KListenerPose\x1b[m\x1b[K::posecallback(const nav_msgs::msg::Odometry odom_msg){\n'}
[68.482899] (carviz) StderrLine: {'line': b'  \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[68.483497] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:1:0\x1b[m\x1b[K:\n'}
[68.483840] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/../ros2head/listenerPoseros2.hpp:24:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcandidate is: void Comm::ListenerPose::posecallback(nav_msgs::msg::Odometry_<std::allocator<void> >::SharedPtr)\n'}
[68.484172] (carviz) StderrLine: {'line': b'   void \x1b[01;31m\x1b[Kposecallback\x1b[m\x1b[K (const nav_msgs::msg::Odometry::SharedPtr odom_msg);\n'}
[68.484493] (carviz) StderrLine: {'line': b'        \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[68.579743] (-) TimerEvent: {}
[68.680380] (-) TimerEvent: {}
[68.781041] (-) TimerEvent: {}
[68.881742] (-) TimerEvent: {}
[68.982428] (-) TimerEvent: {}
[69.083068] (-) TimerEvent: {}
[69.183605] (-) TimerEvent: {}
[69.186433] (carviz) StdoutLine: {'line': b"CMakeFiles/carViz.dir/build.make:518: recipe for target 'CMakeFiles/carViz.dir/comm/ros2src/publisherMotorsros2.cpp.o' failed\n"}
[69.186907] (carviz) StderrLine: {'line': b'make[2]: *** [CMakeFiles/carViz.dir/comm/ros2src/publisherMotorsros2.cpp.o] Error 1\n'}
[69.189613] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_base.hpp:28:0\x1b[m\x1b[K,\n'}
[69.190722] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager_impl.hpp:38\x1b[m\x1b[K,\n'}
[69.191055] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager.hpp:32\x1b[m\x1b[K,\n'}
[69.191365] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/publisher.hpp:35\x1b[m\x1b[K,\n'}
[69.191679] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[69.191992] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[69.192308] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[69.192611] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[69.192913] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executor.hpp:32\x1b[m\x1b[K,\n'}
[69.193228] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors/multi_threaded_executor.hpp:24\x1b[m\x1b[K,\n'}
[69.193599] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[69.194510] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[69.195046] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/../ros2head/listenerPoseros2.hpp:1\x1b[m\x1b[K,\n'}
[69.195649] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:1\x1b[m\x1b[K:\n'}
[69.196152] (carviz) StderrLine: {'line': b'/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[69.196515] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:88:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; Alloc = std::allocator<void>; CallbackMessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.196904] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; CallbackMessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.197264] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.197916] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:16:66:\x1b[m\x1b[K   required from here\n'}
[69.198950] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >::SharedPtrCallback {aka std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>}\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99)\n'}
[69.199372] (carviz) StderrLine: {'line': b'     \x1b[01;31m\x1b[Kshared_ptr_callback_ = callback\x1b[m\x1b[K;\n'}
[69.199737] (carviz) StderrLine: {'line': b'     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[69.200083] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/7/future:48:0\x1b[m\x1b[K,\n'}
[69.200738] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[69.201781] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[69.202524] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/../ros2head/listenerPoseros2.hpp:1\x1b[m\x1b[K,\n'}
[69.203934] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:1\x1b[m\x1b[K:\n'}
[69.204375] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:480:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >}]\n'}
[69.204747] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const function& __x)\n'}
[69.205086] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[69.205422] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:480:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.205790] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:498:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >}]\n'}
[69.206133] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(function&& __x) noexcept\n'}
[69.206460] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[69.206774] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:498:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.207105] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:512:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >}; std::nullptr_t = std::nullptr_t]\n'}
[69.207463] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(nullptr_t) noexcept\n'}
[69.207840] (carviz) StderrLine: {'line': b'       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[69.208179] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:512:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.208531] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:541:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Functor> std::function<_Res(_ArgTypes ...)>::_Requires<std::function<_Res(_ArgTypes ...)>::_Callable<typename std::decay<_U1>::type>, std::function<_Res(_ArgTypes ...)>&> std::function<_Res(_ArgTypes ...)>::operator=(_Functor&&) [with _Functor = _Functor; _Res = void; _ArgTypes = {std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >}]\n'}
[69.208867] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Functor&& __f)\n'}
[69.209177] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[69.209489] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:541:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[69.209859] (carviz) StderrLine: {'line': b'/usr/include/c++/7/bits/std_function.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor> std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>::_Requires<std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>::_Callable<typename std::decay<_Tp>::type, typename std::result_of<typename std::decay<_Tp>::type&(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>::type>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>&> std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>::operator=<_Functor>(_Functor&&) [with _Functor = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[69.210207] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.210559] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:88:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; Alloc = std::allocator<void>; CallbackMessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.210902] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; CallbackMessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.211263] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.211584] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:16:66:\x1b[m\x1b[K   required from here\n'}
[69.211880] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:541:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kclass std::result_of<std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>&(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.212446] (carviz) StderrLine: {'line': b'/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[69.212790] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:88:3:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; Alloc = std::allocator<void>; CallbackMessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.213113] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; CallbackMessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.213443] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.213784] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:16:66:\x1b[m\x1b[K   required from here\n'}
[69.214250] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:550:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class _Functor> std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::reference_wrapper<_Functor>) [with _Functor = _Functor; _Res = void; _ArgTypes = {std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >}]\n'}
[69.214586] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(reference_wrapper<_Functor> __f) noexcept\n'}
[69.214897] (carviz) StderrLine: {'line': b'  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[69.215250] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/std_function.h:550:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[69.216246] (carviz) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/subscription_base.hpp:28:0\x1b[m\x1b[K,\n'}
[69.218537] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager_impl.hpp:38\x1b[m\x1b[K,\n'}
[69.218982] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/intra_process_manager.hpp:32\x1b[m\x1b[K,\n'}
[69.219829] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/publisher.hpp:35\x1b[m\x1b[K,\n'}
[69.221606] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[69.222025] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[69.222594] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[69.223228] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[69.223624] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executor.hpp:32\x1b[m\x1b[K,\n'}
[69.224003] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors/multi_threaded_executor.hpp:24\x1b[m\x1b[K,\n'}
[69.224372] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[69.224745] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[69.225117] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/../ros2head/listenerPoseros2.hpp:1\x1b[m\x1b[K,\n'}
[69.225498] (carviz) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/pankhuri/Week13/carViz/comm/ros2src/listenerPoseros2.cpp:1\x1b[m\x1b[K:\n'}
[69.225903] (carviz) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (Comm::ListenerPose::*(Comm::ListenerPose*, boost::arg<1>))(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::reference_wrapper<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[69.226313] (carviz) StderrLine: {'line': b'     \x1b[01;36m\x1b[Kshared_ptr_callback_ = callback\x1b[m\x1b[K;\n'}
[69.226645] (carviz) StderrLine: {'line': b'     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[69.283720] (-) TimerEvent: {}
[69.384594] (-) TimerEvent: {}
[69.485110] (-) TimerEvent: {}
[69.585713] (-) TimerEvent: {}
[69.686319] (-) TimerEvent: {}
[69.786931] (-) TimerEvent: {}
[69.887555] (-) TimerEvent: {}
[69.988008] (-) TimerEvent: {}
[70.088521] (-) TimerEvent: {}
[70.189137] (-) TimerEvent: {}
[70.231340] (carviz) StdoutLine: {'line': b"CMakeFiles/carViz.dir/build.make:494: recipe for target 'CMakeFiles/carViz.dir/comm/ros2src/listenerPoseros2.cpp.o' failed\n"}
[70.232034] (carviz) StderrLine: {'line': b'make[2]: *** [CMakeFiles/carViz.dir/comm/ros2src/listenerPoseros2.cpp.o] Error 1\n'}
[70.232568] (carviz) StdoutLine: {'line': b"CMakeFiles/Makefile2:67: recipe for target 'CMakeFiles/carViz.dir/all' failed\n"}
[70.232959] (carviz) StderrLine: {'line': b'make[1]: *** [CMakeFiles/carViz.dir/all] Error 2\n'}
[70.233318] (carviz) StdoutLine: {'line': b"Makefile:140: recipe for target 'all' failed\n"}
[70.233773] (carviz) StderrLine: {'line': b'make: *** [all] Error 2\n'}
[70.235386] (carviz) CommandEnded: {'returncode': 2}
[70.236489] (carviz) JobEnded: {'identifier': 'carviz', 'rc': 2}
[70.345214] (-) TimerEvent: {}
[70.345596] (-) EventReactorShutdown: {}
